package transitarioslei;


import java.util.*;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author André
 */
public class JMain extends javax.swing.JFrame implements Observer {

    private SClientes clientes;
    private SLocalidade localidades;
    
    /**
     * Creates new form JMain
     */
    public JMain() {
        
        initComponents();
        clientes = new SClientes(this);
        localidades = new SLocalidade(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbActualizaC = new javax.swing.JButton();
        jtpLC = new javax.swing.JTabbedPane();
        jpLoc = new javax.swing.JPanel();
        jbInsereL = new javax.swing.JButton();
        jbInsereLig = new javax.swing.JButton();
        jbDistancia = new javax.swing.JButton();
        jsLocalidades = new javax.swing.JScrollPane();
        jlLocalidades = new javax.swing.JList();
        jsLigacoes = new javax.swing.JScrollPane();
        jlLigacoes = new javax.swing.JList();
        jtfTexto = new javax.swing.JTextField();
        jbSelectL = new javax.swing.JButton();
        jpCli = new javax.swing.JPanel();
        jbinsereC = new javax.swing.JButton();
        jtpNN = new javax.swing.JTabbedPane();
        jpNome = new javax.swing.JPanel();
        jbProcurarNome = new javax.swing.JButton();
        jbApagarNome = new javax.swing.JButton();
        jpNif = new javax.swing.JPanel();
        jbProcurarNif = new javax.swing.JButton();
        jbApagarNif = new javax.swing.JButton();
        jtfTexto1 = new javax.swing.JTextField();
        jsClientes = new javax.swing.JScrollPane();
        jlClientes = new javax.swing.JList();
        jbSelectC = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu = new javax.swing.JMenu();
        CarregarDados = new javax.swing.JMenuItem();
        CarregarDadostxt = new javax.swing.JMenuItem();
        GravarDados = new javax.swing.JMenuItem();
        GravarDadostxt = new javax.swing.JMenuItem();
        Sair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transitários LEI");
        setBackground(new java.awt.Color(0, 153, 0));
        setMinimumSize(new java.awt.Dimension(678, 500));

        jbActualizaC.setText("Actualizar");
        jbActualizaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizaCActionPerformed(evt);
            }
        });

        jtpLC.setTabPlacement(javax.swing.JTabbedPane.RIGHT);

        jbInsereL.setText("Inserir Localidade");
        jbInsereL.setToolTipText("");
        jbInsereL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsereLActionPerformed(evt);
            }
        });

        jbInsereLig.setText("Inserir Ligação");
        jbInsereLig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInsereLigActionPerformed(evt);
            }
        });

        jbDistancia.setText("Distancia");
        jbDistancia.setToolTipText("");
        jbDistancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDistanciaActionPerformed(evt);
            }
        });

        jsLocalidades.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Localidades"));

        jlLocalidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlLocalidadesMouseClicked(evt);
            }
        });
        jlLocalidades.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlLocalidadesValueChanged(evt);
            }
        });
        jlLocalidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlLocalidadesKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jlLocalidadesKeyTyped(evt);
            }
        });
        jsLocalidades.setViewportView(jlLocalidades);

        jsLigacoes.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Ligacões"));

        jlLigacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlLigacoesMouseClicked(evt);
            }
        });
        jlLigacoes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlLigacoesValueChanged(evt);
            }
        });
        jlLigacoes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlLigacoesKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jlLigacoesKeyTyped(evt);
            }
        });
        jsLigacoes.setViewportView(jlLigacoes);

        jtfTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfTextoKeyTyped(evt);
            }
        });

        jbSelectL.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jbSelectL.setText("Selecionar Localidade");
        jbSelectL.setToolTipText("");
        jbSelectL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelectLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpLocLayout = new javax.swing.GroupLayout(jpLoc);
        jpLoc.setLayout(jpLocLayout);
        jpLocLayout.setHorizontalGroup(
            jpLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpLocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsLigacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                    .addComponent(jsLocalidades))
                .addGap(18, 18, 18)
                .addGroup(jpLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbSelectL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfTexto)
                    .addComponent(jbInsereL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbInsereLig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpLocLayout.setVerticalGroup(
            jpLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpLocLayout.createSequentialGroup()
                        .addComponent(jsLocalidades)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsLigacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jpLocLayout.createSequentialGroup()
                        .addComponent(jtfTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSelectL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jbInsereL, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbInsereLig, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbDistancia, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jtpLC.addTab("Localidades", jpLoc);

        jbinsereC.setText("Inserir ");
        jbinsereC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbinsereCActionPerformed(evt);
            }
        });

        jtpNN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbProcurarNome.setText("Procurar");
        jbProcurarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProcurarNomeActionPerformed(evt);
            }
        });

        jbApagarNome.setText("Apagar");
        jbApagarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbApagarNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpNomeLayout = new javax.swing.GroupLayout(jpNome);
        jpNome.setLayout(jpNomeLayout);
        jpNomeLayout.setHorizontalGroup(
            jpNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbProcurarNome, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
            .addComponent(jbApagarNome, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
        );
        jpNomeLayout.setVerticalGroup(
            jpNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNomeLayout.createSequentialGroup()
                .addComponent(jbProcurarNome, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbApagarNome, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jtpNN.addTab("Nome", jpNome);

        jbProcurarNif.setText("Procurar");
        jbProcurarNif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProcurarNifActionPerformed(evt);
            }
        });

        jbApagarNif.setText("Apagar");
        jbApagarNif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbApagarNifActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpNifLayout = new javax.swing.GroupLayout(jpNif);
        jpNif.setLayout(jpNifLayout);
        jpNifLayout.setHorizontalGroup(
            jpNifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbProcurarNif, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
            .addComponent(jbApagarNif, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
        );
        jpNifLayout.setVerticalGroup(
            jpNifLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNifLayout.createSequentialGroup()
                .addComponent(jbProcurarNif, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbApagarNif, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jtpNN.addTab("NIF", jpNif);

        jtfTexto1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jtfTexto1InputMethodTextChanged(evt);
            }
        });
        jtfTexto1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfTexto1KeyTyped(evt);
            }
        });

        jsClientes.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Clientes"));

        jlClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlClientesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlClientesMouseEntered(evt);
            }
        });
        jlClientes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlClientesValueChanged(evt);
            }
        });
        jlClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlClientesKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jlClientesKeyTyped(evt);
            }
        });
        jsClientes.setViewportView(jlClientes);

        jbSelectC.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jbSelectC.setText("Selecionar Cliente");
        jbSelectC.setToolTipText("");
        jbSelectC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelectCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCliLayout = new javax.swing.GroupLayout(jpCli);
        jpCli.setLayout(jpCliLayout);
        jpCliLayout.setHorizontalGroup(
            jpCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCliLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jsClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtpNN)
                    .addComponent(jbSelectC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfTexto1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbinsereC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpCliLayout.setVerticalGroup(
            jpCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCliLayout.createSequentialGroup()
                        .addComponent(jtfTexto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSelectC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtpNN, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbinsereC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jsClientes))
                .addContainerGap())
        );

        jtpLC.addTab("Clientes", jpCli);

        jMenu.setText("Menu");

        CarregarDados.setText("Carregar Dados");
        CarregarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarregarDadosActionPerformed(evt);
            }
        });
        jMenu.add(CarregarDados);

        CarregarDadostxt.setText("Carregar Dados .TXT");
        CarregarDadostxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarregarDadostxtActionPerformed(evt);
            }
        });
        jMenu.add(CarregarDadostxt);

        GravarDados.setText("Gravar Dados");
        GravarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GravarDadosActionPerformed(evt);
            }
        });
        jMenu.add(GravarDados);

        GravarDadostxt.setText("Gravar Dados .TXT");
        GravarDadostxt.setToolTipText("");
        GravarDadostxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GravarDadostxtActionPerformed(evt);
            }
        });
        jMenu.add(GravarDadostxt);

        Sair.setText("Sair");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });
        jMenu.add(Sair);

        jMenuBar.add(jMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpLC)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jbActualizaC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtpLC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbActualizaC)
                .addContainerGap())
        );

        jtpLC.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbProcurarNifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProcurarNifActionPerformed
        // TODO add your handling code here:
       
       Cliente c;
       
       try {  
            c = this.clientes.procura_ClienteNif(Long.valueOf(jtfTexto1.getText()));
       } catch (NumberFormatException e) {  
            JOptionPane.showMessageDialog(this, "NIF inválido.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;  
       }  

        
        if (c==null){
            JOptionPane.showMessageDialog(this, "Cliente não encontrado.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        int index = this.clientes.get_Vector().indexOf(c.get_Nome());
        if (index == -1){
            JOptionPane.showMessageDialog(this, "Cliente não encontrado.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        new JCliente(c).setVisible(true);
        
        jlClientes.setSelectedIndex(index);
        jlClientes.ensureIndexIsVisible(index);
    }//GEN-LAST:event_jbProcurarNifActionPerformed

    private void jbProcurarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProcurarNomeActionPerformed
        // TODO add your handling code here:
        int index = this.clientes.get_Vector().indexOf(jtfTexto1.getText());
        if (index == -1){
            JOptionPane.showMessageDialog(this, "Cliente não encontrado.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        Cliente c = this.clientes.get_Clientes_nome().get(jtfTexto1.getText());
        new JCliente(c).setVisible(true);
        
        jlClientes.setSelectedIndex(index);
        jlClientes.ensureIndexIsVisible(index);
    }//GEN-LAST:event_jbProcurarNomeActionPerformed

    private void jbApagarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbApagarNomeActionPerformed
        // TODO add your handling code here:
        int index = this.clientes.get_Vector().indexOf(jtfTexto1.getText());
        if (index == -1){
            JOptionPane.showMessageDialog(this, "Cliente não encontrado.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        this.clientes.remove_nome(jtfTexto1.getText());
        
        this.update();
    }//GEN-LAST:event_jbApagarNomeActionPerformed

    private void jbInsereLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsereLActionPerformed
        // TODO add your handling code here:
        new JAddLoc(this,localidades).setVisible(true);
    }//GEN-LAST:event_jbInsereLActionPerformed

    private void jbInsereLigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInsereLigActionPerformed
        // TODO add your handling code here:
        int index = this.localidades.get_Vector().indexOf(jtfTexto.getText());
        if (index == -1){
            JOptionPane.showMessageDialog(this, "Localidade não encontrada.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        jlLocalidades.setSelectedIndex(index);
        jlLocalidades.ensureIndexIsVisible(index);

        
        Localidade localidade = this.localidades.procuraLoc(jtfTexto.getText());
        
        new JAddLig(this,localidade,this.localidades).setVisible(true);
    }//GEN-LAST:event_jbInsereLigActionPerformed

    private void jbinsereCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbinsereCActionPerformed
        // TODO add your handling code here:
        new JAddCliente(this,clientes).setVisible(true);
    }//GEN-LAST:event_jbinsereCActionPerformed

    private void jbActualizaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizaCActionPerformed
        // TODO add your handling code here:
        jlClientes.setListData(this.clientes.get_Vector());
        jlLocalidades.setListData(this.localidades.get_Vector());
    }//GEN-LAST:event_jbActualizaCActionPerformed

    private void jbSelectLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectLActionPerformed
        // TODO add your handling code here:
        int index = this.localidades.get_Vector().indexOf(jtfTexto.getText());
        if (index == -1){
            Vector<String> parciais = new Vector<String>(this.localidades.parciais(jtfTexto.getText()));
            if(parciais.size() == 0){
                JOptionPane.showMessageDialog(this, "Localidade não encontrada.", "Informação", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            else{
                jlLocalidades.setListData(parciais);
                jlLigacoes.setListData(new Vector<String>());
                return;
            }
        }
        jlLocalidades.setListData(this.localidades.get_Vector());
        jlLocalidades.setSelectedIndex(index);
        jlLocalidades.ensureIndexIsVisible(index);

    }//GEN-LAST:event_jbSelectLActionPerformed

    private void jbSelectCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectCActionPerformed
        // TODO add your handling code here:
        int index = this.clientes.get_Vector().indexOf(jtfTexto1.getText());
        if (index == -1){
            Vector<String> parciais = new Vector<String>(this.clientes.parciais(jtfTexto1.getText()));
            if(parciais.size() == 0){
                JOptionPane.showMessageDialog(this, "Cliente não encontrado.", "Informação", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            else{
                jlClientes.setListData(parciais);
                return;
            }
        }
        jlClientes.setListData(this.clientes.get_Vector());
        jlClientes.setSelectedIndex(index);
        jlClientes.ensureIndexIsVisible(index);
    }//GEN-LAST:event_jbSelectCActionPerformed

    private void CarregarDadostxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarregarDadostxtActionPerformed
        // TODO add your handling code here:
        new JLoadtxt(this,clientes,localidades).setVisible(true);
    }//GEN-LAST:event_CarregarDadostxtActionPerformed

    private void jlLocalidadesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlLocalidadesValueChanged
        // TODO add your handling code here:
        
        if (jlLocalidades.getSelectedIndex() == -1){
            jlLigacoes.setListData(new Vector());
            return;
        }
        
        Localidade l = this.localidades.procuraLoc((String)jlLocalidades.getSelectedValue());
        
        Vector<String> ligacoes = new Vector<String>();
        
        Collection<String> s = l.get_Ligacoes().keySet();
        
        for(String str : s)
            ligacoes.add(str);
        
        jlLigacoes.setListData(ligacoes);
        
        jtfTexto.setText((String)jlLocalidades.getSelectedValue());
    }//GEN-LAST:event_jlLocalidadesValueChanged

    private void jlLigacoesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlLigacoesValueChanged
        // TODO add your handling code here:
        jtfTexto.setText((String)jlLigacoes.getSelectedValue());
    }//GEN-LAST:event_jlLigacoesValueChanged

    private void jlClientesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlClientesValueChanged
        // TODO add your handling code here:
        jtfTexto1.setText((String)jlClientes.getSelectedValue());
    }//GEN-LAST:event_jlClientesValueChanged

    private void jbApagarNifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbApagarNifActionPerformed
        // TODO add your handling code here:
       
       Cliente c;
       
       try {  
            c = this.clientes.procura_ClienteNif(Long.valueOf(jtfTexto1.getText()));
       } catch (NumberFormatException e) {  
            JOptionPane.showMessageDialog(this, "NIF inválido.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;  
       }  

        
        if (c==null){
            JOptionPane.showMessageDialog(this, "Cliente não encontrado.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        this.clientes.remove_nif(c.get_Nif());
        this.update();
    }//GEN-LAST:event_jbApagarNifActionPerformed

    private void jlClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlClientesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            Cliente c = this.clientes.procura_ClienteNome(jtfTexto1.getText());
            new JCliente(c).setVisible(true);
            
        }
    }//GEN-LAST:event_jlClientesMouseClicked

    private void jlClientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlClientesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jlClientesMouseEntered

    private void jlClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlClientesKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jlClientesKeyPressed

    private void jlLocalidadesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlLocalidadesKeyPressed
        // TODO add your handling code here:
        /*int index = this.localidades.get_Vector().indexOf(jtfTexto.getText());
        if (index == -1){
            JOptionPane.showMessageDialog(this, "Localidade não encontrada.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        Localidade l = this.localidades.procuraLoc(jtfTexto.getText());
        new JLocalidade(l).setVisible(true);*/
    }//GEN-LAST:event_jlLocalidadesKeyPressed

    private void jlLigacoesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlLigacoesKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jlLigacoesKeyPressed

    private void jbDistanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDistanciaActionPerformed
        // TODO add your handling code here:
        int index = this.localidades.get_Vector().indexOf(jtfTexto.getText());
        if (index == -1){
            JOptionPane.showMessageDialog(this, "Localidade não encontrada.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        jlLocalidades.setSelectedIndex(index);
        jlLocalidades.ensureIndexIsVisible(index);

        Localidade loc = this.localidades.procuraLoc(jtfTexto.getText());
        
        new JDistancia(loc,this.localidades).setVisible(true);
    }//GEN-LAST:event_jbDistanciaActionPerformed

    private void GravarDadostxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GravarDadostxtActionPerformed
        // TODO add your handling code here:
        new JSavetxt(clientes, localidades).setVisible(true);
    }//GEN-LAST:event_GravarDadostxtActionPerformed

    private void CarregarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarregarDadosActionPerformed
        // TODO add your handling code here:
        new JLoad(this,clientes,localidades).setVisible(true);
    }//GEN-LAST:event_CarregarDadosActionPerformed

    private void GravarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GravarDadosActionPerformed
        // TODO add your handling code here:
        new JSave(clientes, localidades).setVisible(true);
    }//GEN-LAST:event_GravarDadosActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        // TODO add your handling code here:
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_SairActionPerformed

    private void jlLocalidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlLocalidadesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            Localidade c = this.localidades.procuraLoc(jtfTexto.getText());
            new JLocalidade(c).setVisible(true);
            
        }
    }//GEN-LAST:event_jlLocalidadesMouseClicked

    private void jlLigacoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlLigacoesMouseClicked
        // TODO add your handling code here:
        String s = (String) jlLocalidades.getSelectedValue();
        
        String lig = (String) jlLigacoes.getSelectedValue();
        
        if (evt.getClickCount() == 2) {
            Localidade l = this.localidades.procuraLoc(s);
            Ligacao ligacao = l.get_Ligacoes().get(lig);
        
        new JLigacao(ligacao).setVisible(true);
            
        }
    }//GEN-LAST:event_jlLigacoesMouseClicked

    private void jlLocalidadesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlLocalidadesKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == evt.VK_ENTER)
        {
            Localidade c = this.localidades.procuraLoc(jtfTexto.getText());
            new JLocalidade(c).setVisible(true);
        
            
        }
        
    }//GEN-LAST:event_jlLocalidadesKeyTyped

    private void jlLigacoesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlLigacoesKeyTyped
        // TODO add your handling code here:
        String s = (String) jlLocalidades.getSelectedValue();
        
        String lig = (String) jlLigacoes.getSelectedValue();
                
        if (evt.getKeyChar() == evt.VK_ENTER){
            
        
        Localidade l = this.localidades.procuraLoc(s);
        Ligacao ligacao = l.get_Ligacoes().get(lig);
        
        new JLigacao(ligacao).setVisible(true);
        }
    }//GEN-LAST:event_jlLigacoesKeyTyped

    private void jlClientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlClientesKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == evt.VK_ENTER){
            Cliente c = this.clientes.procura_ClienteNome(jtfTexto1.getText());
        new JCliente(c).setVisible(true);
        }
    }//GEN-LAST:event_jlClientesKeyTyped

    private void jtfTexto1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtfTexto1InputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jtfTexto1InputMethodTextChanged

    private void jtfTexto1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTexto1KeyTyped
        // TODO add your handling code here:
            Vector<String> parciais = new Vector<String>(this.clientes.parciais(jtfTexto1.getText()));
            jlClientes.setListData(parciais);
    }//GEN-LAST:event_jtfTexto1KeyTyped

    private void jtfTextoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTextoKeyTyped
        // TODO add your handling code here:
            Vector<String> parciais = new Vector<String>(this.localidades.parciais(jtfTexto.getText()));
            jlLocalidades.setListData(parciais);
    }//GEN-LAST:event_jtfTextoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new JMain().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CarregarDados;
    private javax.swing.JMenuItem CarregarDadostxt;
    private javax.swing.JMenuItem GravarDados;
    private javax.swing.JMenuItem GravarDadostxt;
    private javax.swing.JMenuItem Sair;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JButton jbActualizaC;
    private javax.swing.JButton jbApagarNif;
    private javax.swing.JButton jbApagarNome;
    private javax.swing.JButton jbDistancia;
    private javax.swing.JButton jbInsereL;
    private javax.swing.JButton jbInsereLig;
    private javax.swing.JButton jbProcurarNif;
    private javax.swing.JButton jbProcurarNome;
    private javax.swing.JButton jbSelectC;
    private javax.swing.JButton jbSelectL;
    private javax.swing.JButton jbinsereC;
    private javax.swing.JList jlClientes;
    private javax.swing.JList jlLigacoes;
    private javax.swing.JList jlLocalidades;
    private javax.swing.JPanel jpCli;
    private javax.swing.JPanel jpLoc;
    private javax.swing.JPanel jpNif;
    private javax.swing.JPanel jpNome;
    private javax.swing.JScrollPane jsClientes;
    private javax.swing.JScrollPane jsLigacoes;
    private javax.swing.JScrollPane jsLocalidades;
    private javax.swing.JTextField jtfTexto;
    private javax.swing.JTextField jtfTexto1;
    private javax.swing.JTabbedPane jtpLC;
    private javax.swing.JTabbedPane jtpNN;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public void update() {
        int index1 = jlClientes.getSelectedIndex();
        int index2 = jlLocalidades.getSelectedIndex();
       
        jlClientes.setListData(this.clientes.get_Vector());
        jlLocalidades.setListData(this.localidades.get_Vector());
        
        if(index1 != -1) jlClientes.setSelectedIndex(index1);
        if(index2 != -1) jlLocalidades.setSelectedIndex(index2);
        jlClientes.ensureIndexIsVisible(index1);
        jlLocalidades.ensureIndexIsVisible(index2);
    }

}
